#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace commerce
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void Insertt_user(t_user instance);
    partial void Updatet_user(t_user instance);
    partial void Deletet_user(t_user instance);
    partial void Insertt_categorie(t_categorie instance);
    partial void Updatet_categorie(t_categorie instance);
    partial void Deletet_categorie(t_categorie instance);
    partial void Insertt_article(t_article instance);
    partial void Updatet_article(t_article instance);
    partial void Deletet_article(t_article instance);
    partial void Insertt_commande(t_commande instance);
    partial void Updatet_commande(t_commande instance);
    partial void Deletet_commande(t_commande instance);
    #endregion
		
		public DCDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<t_user> t_user
		{
			get
			{
				return this.GetTable<t_user>();
			}
		}
		
		public System.Data.Linq.Table<t_categorie> t_categorie
		{
			get
			{
				return this.GetTable<t_categorie>();
			}
		}
		
		public System.Data.Linq.Table<t_article> t_article
		{
			get
			{
				return this.GetTable<t_article>();
			}
		}
		
		public System.Data.Linq.Table<t_commande> t_commande
		{
			get
			{
				return this.GetTable<t_commande>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_user")]
	public partial class t_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _username;
		
		private string _pwd;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpwdChanging(string value);
    partial void OnpwdChanged();
    #endregion
		
		public t_user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(20)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="VarChar(20)")]
		public string pwd
		{
			get
			{
				return this._pwd;
			}
			set
			{
				if ((this._pwd != value))
				{
					this.OnpwdChanging(value);
					this.SendPropertyChanging();
					this._pwd = value;
					this.SendPropertyChanged("pwd");
					this.OnpwdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_categorie")]
	public partial class t_categorie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _libelle;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    #endregion
		
		public t_categorie()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="VarChar(50)")]
		public string libelle
		{
			get
			{
				return this._libelle;
			}
			set
			{
				if ((this._libelle != value))
				{
					this.OnlibelleChanging(value);
					this.SendPropertyChanging();
					this._libelle = value;
					this.SendPropertyChanged("libelle");
					this.OnlibelleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_article")]
	public partial class t_article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _libelle;
		
		private System.Nullable<double> _prix_unitaire;
		
		private string _categorie;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    partial void Onprix_unitaireChanging(System.Nullable<double> value);
    partial void Onprix_unitaireChanged();
    partial void OncategorieChanging(string value);
    partial void OncategorieChanged();
    #endregion
		
		public t_article()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="VarChar(50)")]
		public string libelle
		{
			get
			{
				return this._libelle;
			}
			set
			{
				if ((this._libelle != value))
				{
					this.OnlibelleChanging(value);
					this.SendPropertyChanging();
					this._libelle = value;
					this.SendPropertyChanged("libelle");
					this.OnlibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prix_unitaire", DbType="Float")]
		public System.Nullable<double> prix_unitaire
		{
			get
			{
				return this._prix_unitaire;
			}
			set
			{
				if ((this._prix_unitaire != value))
				{
					this.Onprix_unitaireChanging(value);
					this.SendPropertyChanging();
					this._prix_unitaire = value;
					this.SendPropertyChanged("prix_unitaire");
					this.Onprix_unitaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categorie", DbType="VarChar(100)")]
		public string categorie
		{
			get
			{
				return this._categorie;
			}
			set
			{
				if ((this._categorie != value))
				{
					this.OncategorieChanging(value);
					this.SendPropertyChanging();
					this._categorie = value;
					this.SendPropertyChanged("categorie");
					this.OncategorieChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_commande")]
	public partial class t_commande : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Article_commandee;
		
		private System.Nullable<int> _Quantite;
		
		private string _Client_email;
		
		private System.Nullable<System.DateTime> _Date_commande;
		
		private System.Nullable<double> _prix_totale;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticle_commandeeChanging(string value);
    partial void OnArticle_commandeeChanged();
    partial void OnQuantiteChanging(System.Nullable<int> value);
    partial void OnQuantiteChanged();
    partial void OnClient_emailChanging(string value);
    partial void OnClient_emailChanged();
    partial void OnDate_commandeChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_commandeChanged();
    partial void Onprix_totaleChanging(System.Nullable<double> value);
    partial void Onprix_totaleChanged();
    #endregion
		
		public t_commande()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article_commandee", DbType="VarChar(50)")]
		public string Article_commandee
		{
			get
			{
				return this._Article_commandee;
			}
			set
			{
				if ((this._Article_commandee != value))
				{
					this.OnArticle_commandeeChanging(value);
					this.SendPropertyChanging();
					this._Article_commandee = value;
					this.SendPropertyChanged("Article_commandee");
					this.OnArticle_commandeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantite", DbType="Int")]
		public System.Nullable<int> Quantite
		{
			get
			{
				return this._Quantite;
			}
			set
			{
				if ((this._Quantite != value))
				{
					this.OnQuantiteChanging(value);
					this.SendPropertyChanging();
					this._Quantite = value;
					this.SendPropertyChanged("Quantite");
					this.OnQuantiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client_email", DbType="VarChar(100)")]
		public string Client_email
		{
			get
			{
				return this._Client_email;
			}
			set
			{
				if ((this._Client_email != value))
				{
					this.OnClient_emailChanging(value);
					this.SendPropertyChanging();
					this._Client_email = value;
					this.SendPropertyChanged("Client_email");
					this.OnClient_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_commande", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_commande
		{
			get
			{
				return this._Date_commande;
			}
			set
			{
				if ((this._Date_commande != value))
				{
					this.OnDate_commandeChanging(value);
					this.SendPropertyChanging();
					this._Date_commande = value;
					this.SendPropertyChanged("Date_commande");
					this.OnDate_commandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prix_totale", DbType="Float")]
		public System.Nullable<double> prix_totale
		{
			get
			{
				return this._prix_totale;
			}
			set
			{
				if ((this._prix_totale != value))
				{
					this.Onprix_totaleChanging(value);
					this.SendPropertyChanging();
					this._prix_totale = value;
					this.SendPropertyChanged("prix_totale");
					this.Onprix_totaleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
